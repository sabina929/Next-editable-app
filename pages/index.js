import React, {createContext, useState, useEffect, useCallback} from 'react'
import Head from 'next/head'
import tableStyles from '../styles/Table.module.css'
import EditableTableCell from '../components/EditableTableCell'
import EmpoleyeesDataModal from '../components/EmpoleyeesDataModal'
import Pagination from '../components/Pagination'
import Search from '../components/Search'
import { useEmployees } from '../components/EmployeesContext'


export default function Home() {
  const {employees,isModalOpened,updatedAndDeletedEmployees,deleteEmployee,showModal,resetData,handleEmployeeTableCell, currentEmployees, employeesPerPage, currentPage, paginate, searchTerm, isSearched, handleChange, handleSubmit} = useEmployees()

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
        <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css" integrity="sha512-iBBXm8fW90+nuLcSKlbmrPcLa0OT92xO1BIsZ+ywDWZCvqsWgccV3gFoRBv0z+8dLJgyAHIhR35VZc2oM/gI1w==" crossorigin="anonymous" />
      </Head>

    
      <Search searchTerm={searchTerm} handleChange={handleChange} handleSubmit={handleSubmit}/>
        <section className="container">
            <h1>Employees Table</h1>


            <article className={tableStyles.tableContainer}>
                    <table id={tableStyles.employees}>
                        <thead>
                        <tr className={tableStyles.tableRow}>
                            <th className={tableStyles.tableHead}>ID</th>
                            <th className={tableStyles.tableHead}>Name</th>
                            <th className={tableStyles.tableHead}>Surname</th>
                            <th className={tableStyles.tableHead}>Date of birth</th>
                            <th className={tableStyles.tableHead}>Position</th>
                            <th className={tableStyles.tableHead}>Phone number</th>
                            <th className={tableStyles.tableHead}>Status</th>
                            <th className={tableStyles.tableHead}>Action</th>
                        </tr>
                        </thead>
                        <tbody>
                        
                          {/* <EditableTableCell value={'Name1'}/> */}

                          {
                            currentEmployees.map(employee=>{
                              const {id, name, surname, dateOfBirth, position, phoneNumber, isDeleted, inputId} = employee

                              return (
                                <tr key={inputId} className={`${tableStyles.tableRow} ${tableStyles.status} ${isDeleted ? tableStyles.deleted : tableStyles.notDeleted}`}>
                                    <EditableTableCell handleEmployeeTableCell={handleEmployeeTableCell} cellAttrs={{
                                    "type": "text",
                                    "name": "id",
                                    inputValue: id,
                                    id: `${inputId}input1`
                                    }}/>
                                    <EditableTableCell handleEmployeeTableCell={handleEmployeeTableCell} cellAttrs={{
                                    "type": "text",
                                    "name": "name",
                                    inputValue: name,
                                    id: `${inputId}input2`
                                    }}/>
                                    <EditableTableCell handleEmployeeTableCell={handleEmployeeTableCell} cellAttrs={{
                                    "type": "text",
                                    "name": "surname",
                                    inputValue: surname,
                                    id: `${inputId}input3`
                                    }}/>
                                    <EditableTableCell handleEmployeeTableCell={handleEmployeeTableCell} cellAttrs={{
                                    "type": "date",
                                    "name": "dateOfBirth",
                                    inputValue: dateOfBirth,
                                    id: `${inputId}input4`
                                    }}/>
                                    <EditableTableCell handleEmployeeTableCell={handleEmployeeTableCell} cellAttrs={{
                                    "type": "text",
                                    "name": "position",
                                    inputValue: position,
                                    id: `${inputId}input5`
                                    }}/>
                                    <EditableTableCell handleEmployeeTableCell={handleEmployeeTableCell} cellAttrs={{
                                    "type": "tel",
                                    "name": "phoneNumber",
                                    inputValue: phoneNumber,
                                    id: `${inputId}input6`
                                    }}/>
                                    <td className={`${tableStyles.tableData}`} ><span className={tableStyles.tableSpan}>{isDeleted ? 'deleted' : '.............'}</span></td>
                                    <td className={tableStyles.tableData}>
                                    {
                                        isDeleted ? <i className={`fas fa-trash-restore ${tableStyles.tableI}`} onClick={()=>deleteEmployee(inputId)}></i> : <i className="fas fa-trash" onClick={()=>deleteEmployee(inputId)}/>
                                    }
                                    
                                    </td>
                                </tr>    
                              )
                            })
                          }
                   
                        </tbody>
                    </table>                  
                </article>



                {
                    isSearched ? null :<Pagination employeesPerPage={employeesPerPage} employees={employees} currentPage={currentPage} paginate={paginate}/> 
                }
            <article className="btns-container">
                {/* <form action='#' onSubmit={handleSubmit}> */}
                    <button type='button' onClick={showModal}>Submit data</button>
                {/* </form> */}
                <button type='button' onClick={resetData}>Reset data</button>
            </article>
            
        </section>

        {
            isModalOpened &&  <EmpoleyeesDataModal updatedAndDeletedEmployees={updatedAndDeletedEmployees} showModal={showModal}/>
        }

        

   
    </>
  )
}
